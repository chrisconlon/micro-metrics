library(hdm)
install.packages(hdm)
install.packages("hdm", repos="http://R-Forge.R-project.org")
library(hdm)
install.packages("hdm", repos="http://R-Forge.R-project.org")
install.packages("glmnet")
install.packages("ggplot2")
install.packages("checkmate")
install.packages("hdm", repos="http://R-Forge.R-project.org")
library(hdm)
data(BLP)
help(hdm)
if (!require(hdm)) install.packages("hdm")
library(hdm)
data(BLP)
share.fn <- function(delta,  ## J vector
x,      ## J by K
log.y,  ## S vector of log(y_i)
log.yp, ## S by J of log(y_i - p_j)
v,      ## S by K
alpha,  ## scalar
sigma)  ## K vector
{
stop("## TODO: compute J vector of shares in this market")
return(share)
}
View(share.fn)
W <- log(BLP[,c("hpwt","mpg","space","mpd")])
View(BLP)
Z <- hdm:::constructIV(BLP$firm.id, BLP$cdid, BLP$id,
cbind(1,BLP[,c("hpwt","air","mpd","mpg","space","price")]))
View(BLP)
View(BLP)
BLPData <- BLP$BLP
library hdm
library("hdm")
data(BLP)
BLPData <- BLP$BLP
View(BLPData)
install.packages("revealjs", type = "source")
getwd()
this.dir <- dirname(parent.frame(2)$ofile)
setwd(this.dir)
this.dir <- dirname(parent.frame(2)$ofile)
library(rstudioapi)
library(rstudioapi)
install.packages("rstudioapi")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Dropbox/Teaching/BC-Methods/github/empirical-methods/Finding Roots/")
